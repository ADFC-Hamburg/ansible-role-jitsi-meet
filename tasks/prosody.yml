---

# - name: Copy global prosody config template
#   template:
#     src: prosody_global_config.j2
#     dest: "/etc/prosody/prosody.cfg.lua"
#     owner: root
#     group: root
#     mode: "0644"
#     validate: "luac -p %s"
#   notify: restart prosody

- name: Copy prosody config template.
  template:
    src: prosody_config.j2
    dest: "/etc/prosody/conf.avail/{{ jitsi_meet_server_name }}.cfg.lua"
    owner: root
    group: root
    mode: "0644"
    # Simply syntax check for validation, doesn't catch config errors.
    validate: "luac -p %s"
  notify: restart prosody
  tags:
    - conf

- name: Symlink prosody config by domain name.
  file:
    path: "/etc/prosody/conf.d/{{ jitsi_meet_server_name }}.cfg.lua"
    state: link
    src: "/etc/prosody/conf.avail/{{ jitsi_meet_server_name }}.cfg.lua"
  notify: restart prosody

- name: Register jicofo agent with prosody service.
  command: >
    prosodyctl register focus auth.{{ jitsi_meet_server_name }} {{ jitsi_meet_jicofo_password }}
  args:
    # Yes, prosody actually URL-escapes the directory name for some reason.
    # Must hardcode the escaping in the prefix, since the replace filter only
    # applies to the server name var, not the concatenated string.
    creates: /var/lib/prosody/{{ 'auth%2e'+jitsi_meet_server_name | replace('.', '%2e') | replace('-', '%2d') }}/accounts/focus.dat
  notify:
    - restart jicofo
    - restart prosody

- name: Overwrite focus password
  template:
    src: focus.dat.j2
    dest: /var/lib/prosody/{{ 'auth%2e'+jitsi_meet_server_name | replace('.', '%2e') | replace('-', '%2d') }}/accounts/focus.dat
    owner: prosody
    group: prosody
    mode: '0640'
  notify:
    - restart jicofo
    - restart prosody

- name: Register jvb agent with Prosody service.
  command: >
    prosodyctl register jvb auth.{{ jitsi_meet_server_name }} {{ jitsi_meet_videobridge_password }}
  args:
    # Yes, prosody actually URL-escapes the directory name for some reason.
    # Must hardcode the escaping in the prefix, since the replace filter only
    # applies to the server name var, not the concatenated string.
    creates: /var/lib/prosody/{{ 'jvg%2e'+jitsi_meet_server_name | replace('.', '%2e') |  replace('-', '%2d') }}/accounts/jvb.dat
  notify:
    - restart jicofo
    - restart prosody

- name: Generate SSL keypair for prosody service.
  shell: >
    yes '' | prosodyctl cert generate {{ jitsi_meet_server_name }}
  args:
    creates: /var/lib/prosody/{{ jitsi_meet_server_name }}.crt
  notify:
    - restart jicofo
    - restart prosody

- name: Generate SSL keypair for prosody auth service.
  shell: >
    yes '' | prosodyctl cert generate auth.{{ jitsi_meet_server_name }}
  args:
    creates: /var/lib/prosody/auth.{{ jitsi_meet_server_name }}.crt
  notify:
    - restart jicofo
    - restart prosody

- name: Set file mode on certificates
  file:
    path: "/var/lib/prosody/{{ jitsi_meet_server_name }}.crt"
    owner: root
    group: prosody
    mode: '0640'
  with_items:
    - /var/lib/prosody/{{ jitsi_meet_server_name }}.crt
    - /var/lib/prosody/{{ jitsi_meet_server_name }}.key
    - /var/lib/prosody/auth.{{ jitsi_meet_server_name }}.crt
    - /var/lib/prosody/auth.{{ jitsi_meet_server_name }}.key

- name: Assure localhost mode
  file:
    path: "/etc/prosody/certs/localhost.key"
    mode: '0644'

- name: Symlink prosody certs
  file:
    path: "/etc/prosody/certs/{{ jitsi_meet_server_name }}.crt"
    state: link
    src:  "/var/lib/prosody/{{ jitsi_meet_server_name }}.crt"
  notify: restart prosody

- name: Symlink prosody key
  file:
    path: "/etc/prosody/certs/{{ jitsi_meet_server_name }}.key"
    state: link
    src:  "/var/lib/prosody/{{ jitsi_meet_server_name }}.key"
  notify: restart prosody

- name: Symlink prosody auth certs
  file:
    path: "/etc/prosody/certs/auth.{{ jitsi_meet_server_name }}.crt"
    state: link
    src:  "/var/lib/prosody/auth.{{ jitsi_meet_server_name }}.crt"
  notify: restart prosody

- name: Symlink prosody auth key
  file:
    path: "/etc/prosody/certs/auth.{{ jitsi_meet_server_name }}.key"
    state: link
    src:  "/var/lib/prosody/auth.{{ jitsi_meet_server_name }}.key"
  notify: restart prosody

- name: Symlink prosody auth certs to ca-certificates
  file:
    path: "/etc/prosody/certs/auth.{{ jitsi_meet_server_name }}.crt"
    state: link
    src:  "/usr/local/share/ca-certificates/auth.{{ jitsi_meet_server_name }}.crt"
  notify: restart prosody

- name: update-ca-certificates
  command: update-ca-certificates -f


################################
### Section to support jibri ###

- name: Register jibri agent with prosody service.
  command: >
    prosodyctl register jibri auth.{{ jitsi_meet_server_name }} {{ jibri_user_jibri_password }}
  args:
    # Yes, prosody actually URL-escapes the directory name for some reason.
    # Must hardcode the escaping in the prefix, since the replace filter only
    # applies to the server name var, not the concatenated string.
    creates: /var/lib/prosody/{{ 'auth%2e'+jitsi_meet_server_name | replace('.', '%2e') | replace('-', '%2d') }}/accounts/jibri.dat
  when: jibri_enable
  notify:
  - restart jicofo
  - restart prosody

- name: Register recorder agent with Prosody service.
  command: >
    prosodyctl register recorder recorder.{{ jitsi_meet_server_name }} {{ jibri_user_recorder_password }}
  args:
    # Yes, prosody actually URL-escapes the directory name for some reason.
    # Must hardcode the escaping in the prefix, since the replace filter only
    # applies to the server name var, not the concatenated string.
    creates: /var/lib/prosody/{{ 'recorder%2e'+jitsi_meet_server_name | replace('.', '%2e') | replace('-', '%2d') }}/accounts/recorder.dat
  when: jibri_enable
  notify:
  - restart jicofo
  - restart prosody
